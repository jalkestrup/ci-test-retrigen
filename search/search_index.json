{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"retrigen","text":"<p>TODO: Add a short description of the project.</p>"},{"location":"#where-to-ask-questions","title":"\ud83d\udcac Where to ask questions","text":"Type \ud83d\udcda FAQ FAQ \ud83d\udea8 Bug Reports GitHub Issue Tracker \ud83c\udf81 Feature Requests &amp; Ideas GitHub Issue Tracker \ud83d\udc69\u200d\ud83d\udcbb Usage Questions GitHub Discussions \ud83d\uddef General Discussion GitHub Discussions"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#how-do-i-test-the-code","title":"How do I test the code?","text":"<p>This package comes with a test suite which you can run using implemented using [pytest]. In order to run the tests, you have to clone the repository and install the package. This will also install the required tests dependencies and test utilities defined in the extras_require section of the :code:<code>pyproject.toml</code>.</p> <pre><code># clone the repository\ngit clone https://github.com/jalkestrup/retrigen\n\n# install package and test dependencies\npip install -e \".[tests]\"\n\n# run all tests\npython -m pytest\n</code></pre> <p>which will run all the test in the <code>tests</code> folder.</p> <p>Specific tests can be run using:</p> <pre><code>python -m pytest tests/desired_test.py\n</code></pre> <p>If you want to check code coverage you can run the following:</p> <pre><code>python -m pytest --cov=src\n</code></pre>"},{"location":"faq/#how-is-the-documentation-generated","title":"How is the documentation generated?","text":"<p>This package use mkdocs with the material theme to generate the documentation.</p> <p>To make the documentation you can run:</p> <pre><code># install sphinx, themes and extensions\npip install -e \".[docs]\"\n\n# generate html from documentations\nmake build-docs\n</code></pre> <p>If you wish to view the documentation in your browser you can run:</p> <pre><code>make docs-view\n</code></pre>"},{"location":"faq/#credits","title":"Credits","text":"<p>This project was generated from the Swift Python Cookiecutter template.</p>"},{"location":"installation/","title":"Installation","text":"<p>You can install <code>retrigen</code> via pip from PyPI:</p> <pre><code>pip install retrigen\n</code></pre> <p>or from GitHub using:</p> <pre><code>pip install git+https://github.com/jalkestrup/retrigen\n</code></pre>"},{"location":"api/docs_example/","title":"Sample API","text":"<p>A sample API page</p> <pre><code>This is a sample API page. Feel free to delete it.\n</code></pre> <p>and here is the function documentation:</p>"},{"location":"api/docs_example/#retrigen.docs_example.sample_function","title":"<code>retrigen.docs_example.sample_function(arg1, arg2)</code>","text":"<p>This is a sample function.</p> <p>Parameters:</p> Name Type Description Default <code>arg1</code> <code>str</code> <p>This is the first argument.</p> required <code>arg2</code> <code>str</code> <p>This is the second argument.</p> required <p>Returns:</p> Type Description <code>str</code> <p>This is the return value.</p> Source code in <code>src/retrigen/docs_example.py</code> <pre><code>def sample_function(arg1: str, arg2: str) -&gt; str:\n    \"\"\"This is a sample function.\n\n    Args:\n        arg1: This is the first argument.\n        arg2: This is the second argument.\n\n    Returns:\n        This is the return value.\n    \"\"\"\n    return arg1 + arg2\n</code></pre>"},{"location":"tutorials/usage/","title":"Usage guide","text":"In\u00a0[3]: Copied! <pre>print(\"put in your tutorial here\")\n</pre> print(\"put in your tutorial here\") <pre>put in your tutorial here\n</pre>"},{"location":"tutorials/usage/#usage-guide","title":"Usage guide\u00b6","text":""}]}